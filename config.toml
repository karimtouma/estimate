# PDF Processor Configuration
# Main configuration for PDF processing system

[api]
# API Configuration
# gemini_api_key se lee desde variable de entorno GEMINI_API_KEY
# Configurar en .env: GEMINI_API_KEY=tu_api_key_aqui
# Default model to use
default_model = "gemini-2.5-pro"
# Request timeout (seconds)
request_timeout = 300
# Maximum retries for failed requests
max_retries = 5
# Language configuration
# auto: Detect document language automatically
# spanish: Force Spanish output
# english: Force English output  
# mixed: Preserve document's mixed language
output_language = "auto"
# System prompt language settings (auto will adapt to detected language)
system_prompts_language = "auto"
# Force specific language output (overrides auto-detection)
force_language_output = false
# Fallback language when detection fails
fallback_language = "spanish"
# PARALLEL PROCESSING: Maximum concurrent API requests (3-5 recommended)
max_concurrent_requests = 3

[processing]
# Advanced processing configuration
max_pdf_size_mb = 50
# Temporary directory for files
temp_dir = "/tmp/pdf_processor"
# Keep temporary files after processing
keep_temp_files = false
# Logging level (DEBUG, INFO, WARNING, ERROR)
log_level = "INFO"
# Image configuration
image_dpi = 300
image_enhancement = true
# OCR configuration
ocr_language = "eng"
ocr_confidence_threshold = 0.5
# Parallelization configuration
max_parallel_workers = 8
enable_async_processing = true
# CORE ANALYSIS PARALLELIZATION: Enable parallel execution of analysis phases
enable_parallel_core_analysis = true
# Thread pool size for parallel core analysis
core_analysis_threads = 3
# PAGE MAPPING: Enable complete page-by-page analysis and categorization
enable_complete_page_mapping = true
# Page mapping batch size (pages per API call)
page_mapping_batch_size = 5

[container]
# Container-specific configuration
input_dir = "/app/input"
output_dir = "/app/output"
logs_dir = "/app/logs"
# Auto-detect if running in container
auto_detect = true

[analysis]
# Advanced analysis configuration for structural blueprints
# Default enabled analysis types
enabled_types = ["general", "sections", "data_extraction"]
# Agent configuration
max_concurrent_agents = 4
enable_multi_turn_reasoning = true
enable_cross_page_analysis = true
# GEPA/DSPy intelligent optimization system
enable_dspy_optimization = true
dspy_reasoning_depth = 3
# Intelligent auto-optimization system
auto_gepa_optimization = true
min_analyses_for_gepa = 5
# Performance thresholds for triggering optimization
confidence_threshold = 0.8
accuracy_threshold = 0.75
max_error_rate = 0.2
# Optimization focus areas
optimize_for_accuracy = true
optimize_for_reliability = true
optimize_for_efficiency = true
# Dynamic schemas configuration
enable_dynamic_schemas = true
auto_register_confidence_threshold = 0.85
enable_continuous_learning = true
registry_persistence_path = "data/dynamic_registry.json"
# GEPA comprehensive prompt optimization
enable_gepa_evolution = true
gepa_evolution_threshold = 3  # Minimum analyses to trigger optimization
gepa_target_improvement = 0.20  # Target improvement for optimization
gepa_max_generations = 10  # Maximum evolution generations
gepa_population_size = 8  # Population size for genetic algorithm
gepa_optimization_threshold = 0.7  # Minimum score to trigger optimization
gepa_test_samples = 3  # Number of test samples per prompt
# GEPA always-on classification enhancement
enable_gepa_always_classification = true  # ALWAYS enhance classification
gepa_classification_candidates = 5  # Number of candidates to generate
gepa_judge_weight = 0.4  # Weight of judge evaluation vs confidence
gepa_consensus_threshold = 0.7  # Threshold for consensus agreement
# Taxonomy configuration
taxonomy_confidence_threshold = 0.7
element_detection_threshold = 0.6
# Save conversation history
save_conversation_history = true
# Maximum items in history
max_history_items = 200
# Default questions for structural analysis (universal for any type of blueprint)
default_questions = [
    "What type of structure or building is shown in this blueprint?",
    "What are the main structural elements and systems visible?",
    "What construction materials and specifications are indicated?",
    "What are the key dimensions and measurements shown?",
    "What structural loads, forces, or engineering details are specified?",
    "Are there foundation details, footings, or underground elements shown?",
    "What construction methods and systems are being used?",
    "What technical specifications, codes, or standards are referenced?"
]
# Analysis instructions
analysis_instructions = "Analyze technical drawings, blueprints, and construction documents. Focus on structural, architectural, mechanical, electrical, and civil engineering aspects. Language will be automatically detected and optimized."

[output]
# Output configuration
# Output file format
format = "json"
# Include metadata in results
include_metadata = true
# Create backup of results
create_backup = false
# Compress large output files
compress_large_files = true
# Minimum size for compression (MB)
compression_threshold_mb = 10

[security]
# Security configuration
# Validate file types
validate_file_types = true
# Allowed file extensions
allowed_extensions = [".pdf"]
# Scan files for malware (requires clamav)
scan_for_malware = false
# Strip metadata from files
strip_metadata = false
